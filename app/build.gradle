plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-kapt'
    id 'kotlin-android-extensions'
    //模块build.gradle
//    id 'com.alibaba.arouter'
}

android {
    compileSdkVersion 30
    buildToolsVersion "30.0.2"
//
//    buildFeatures {
//        compose true
//    }

//    composeOptions {
//        kotlinCompilerExtensionVersion = "1.1.0-alpha03"
//    }

//
//    kotlinOptions {
//        jvmTarget = "1.8"
//    }



    defaultConfig {
        applicationId "com.sinata.framework"
        minSdkVersion 24
        targetSdkVersion 30
        versionCode 1
        versionName "1.0"
        //添加此行
        multiDexEnabled true
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

//        javaCompileOptions {
//            annotationProcessorOptions {
//                arguments = [AROUTER_MODULE_NAME: project.getName(), AROUTER_GENERATE_DOC: "enable",
//                             "room.schemaLocation":"$projectDir/schemas".toString()]
//            }
//
//        }


//        javaCompileOptions {
//            annotationProcessorOptions {
//                arguments += [
//                        "dagger.hilt.disableModulesHaveInstallInCheck": "true"
//                ]
//            }
//        }

//        kapt {
//            javacOptions {
//                // These options are normally set automatically via the Hilt Gradle plugin, but we
//                // set them manually to workaround a bug in the Kotlin 1.5.20
//                option("-Adagger.fastInit=ENABLED")
//                option("-Adagger.hilt.android.internal.disableAndroidSuperclassValidation=true")
//            }
//        }


    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }


    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

//    composeOptions {
//        kotlinCompilerVersion "1.4.32"
//        kotlinCompilerExtensionVersion "1.0.0-beta07"
//    }


    kotlinOptions {
        jvmTarget = '1.8'
    }

    androidExtensions {
        experimental = true
    }

    dataBinding{
        enabled = true
    }
//    kotlin{
//        experimental {
//            coroutines 'enable'
//        }
//    }

    repositories {
        flatDir {
            dirs project(':hi-library').file('libs')
        }
    }
}


kapt {
    arguments {
        arg("AROUTER_MODULE_NAME", project.getName())
    }
}


def camerax_version = "1.0.0"


dependencies {
    implementation 'androidx.appcompat:appcompat:1.1.0'
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'


//    implementation 'androidx.navigation:navigation-fragment-ktx:2.2.2'
//    implementation 'androidx.navigation:navigation-ui-ktx:2.2.2'
    testImplementation 'junit:junit:4.+'
    androidTestImplementation 'androidx.test.ext:junit:1.1.1'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'
    implementation project(':common')
    //添加此行
    implementation 'com.android.support:multidex:1.0.3'

    implementation 'com.wx.ovalimageview:roundimageview:1.1.0'

//    implementation 'com.github.bumptech.glide:glide:4.12.0'
    kapt 'com.github.bumptech.glide:compiler:4.12.0'

//    implementation "androidx.compose.ui:ui:1.0.0-beta07"
//    implementation "androidx.compose.foundation:foundation:1.0.0-beta07"
//    implementation "androidx.compose.material:material:1.0.0-beta07"
//    implementation "androidx.compose.compiler:compiler:1.0.0-beta07"
//    implementation "androidx.compose.animation:animation:1.0.0-beta07"

//
    // CameraX core library using camera2 implementation
    implementation "androidx.camera:camera-camera2:$camerax_version"
// CameraX Lifecycle Library
    implementation "androidx.camera:camera-lifecycle:$camerax_version"
// CameraX View class
    implementation "androidx.camera:camera-view:1.0.0-alpha24"
//    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-core:1.1.1'
//    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-android:1.1.1'
    implementation project(':navi-annotation')
    kapt project(':nav-compiler')
    kapt 'com.alibaba:arouter-compiler:1.5.2'

    implementation project(':hi_debugtool')

    //依赖注解 ioc框架
    implementation 'com.google.android.material:material:1.4.0'
    implementation "com.google.dagger:hilt-android:2.28-alpha"
    kapt "com.google.dagger:hilt-android-compiler:2.28-alpha"
//    kapt 'androidx.hilt:hilt-compiler:1.0.0-alpha01'
//    //在hilt中使用viewModel，需要添加下面的依赖
//    implementation 'androidx.hilt:hilt-lifecycle-viewmodel:1.0.0-alpha01'

//    implementation "androidx.compose.ui:ui:1.1.0-alpha03"
//    implementation "androidx.compose.material:material:1.1.0-alpha03"
//    implementation "androidx.compose.compiler:compiler:1.1.0-alpha03"
//    implementation "androidx.compose.animation:animation:1.1.0-alpha03"
//    implementation "androidx.compose.foundation:foundation:1.1.0-alpha03"
//    implementation "androidx.compose.runtime:runtime:1.1.0-alpha03"
//    implementation "androidx.compose.runtime:runtime-livedata:1.1.0-alpha03"
//    implementation "androidx.compose.runtime:runtime-rxjava2:1.1.0-alpha03"



//    implementation 'androidx.lifeycycle:lifecycle-extensions:2.0.0'
//    // 可以把扫描所有编辑了 OnLifecycleEvent 注解的类，并生成实现类
//    kapt 'androidx.lifeycycle:lifecycle-compiler:2.0.0'

    //ASProj/app/build.gradle

//    implementation(name:'libbreakpad-debug',ext:'.aar')
}



